{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIncrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506108e3806100316000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba414fa61161005b578063ba414fa6146100cc578063d637f367146100e4578063f8ccbf47146100ec578063fa7626d4146100ff57600080fd5b80630a9254e4146100825780630c8486681461008c5780633a76846314610094575b600080fd5b61008a61010c565b005b61008a61015f565b6100af737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d4610234565b60405190151581526020016100c3565b61008a61035f565b6000546100d49062010000900460ff1681565b6000546100d49060ff1681565b600a60405161011a9061067f565b908152602001604051809103906000f08015801561013c573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b60085460408051632a1f650b60e21b815290516000926001600160a01b03169163a87d942c9160048083019260209291908290030181865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd919061068c565b90506101da81600a610449565b60408051818152600e818301526d02a3432903b30b63ab29034b99d160951b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a150565b60008054610100900460ff16156102545750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561035a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916102e2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016106d5565b60408051601f19818403018152908290526102fc916106f9565b6000604051808303816000865af19150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5091505080806020019051810190610356919061070c565b9150505b919050565b600860009054906101000a90046001600160a01b03166001600160a01b0316635b34b9666040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050506000600860009054906101000a90046001600160a01b03166001600160a01b031663a87d942c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610440919061068c565b90506101da81600b5b80821461056f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104b99060208082526021908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e746040820152605d60f81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a161056f610573565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561066e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261060d92916020016106d5565b60408051601f1981840301815290829052610627916106f9565b6000604051808303816000865af19150503d8060008114610664576040519150601f19603f3d011682016040523d82523d6000602084013e610669565b606091505b505050505b6000805461ff001916610100179055565b61017f8061072f83390190565b60006020828403121561069e57600080fd5b5051919050565b6000815160005b818110156106c657602081850181015186830152016106ac565b50600093019283525090919050565b6001600160e01b03198316815260006106f160048301846106a5565b949350505050565b600061070582846106a5565b9392505050565b60006020828403121561071e57600080fd5b8151801515811461070557600080fdfe608060405234801561001057600080fd5b5060405161017f38038061017f83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b6101208061005f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80635b34b966146041578063a87d942c146049578063f5c5ad8314605e575b600080fd5b60476064565b005b60005460405190815260200160405180910390f35b6047607b565b60016000808282546074919060a1565b9091555050565b60016000808282546074919060c6565b634e487b7160e01b600052601160045260246000fd5b808201828112600083128015821682158216171560be5760be608b565b505092915050565b818103600083128015838313168383128216171560e35760e3608b565b509291505056fea26469706673582212203b1f4378e0f6dd47b2d5a7883d94cc1cd9593b8b7d14158ce56efcff2521caa864736f6c63430008110033a2646970667358221220e74c59f1d5a870e40ce366cef2b8077de90f10ba54ddc7c30151a98286e9616964736f6c63430008110033",
    "sourceMap": "124:501:8:-:0;;;1572:26:6;;;-1:-1:-1;;170:28:0;;;;;124:501:8;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba414fa61161005b578063ba414fa6146100cc578063d637f367146100e4578063f8ccbf47146100ec578063fa7626d4146100ff57600080fd5b80630a9254e4146100825780630c8486681461008c5780633a76846314610094575b600080fd5b61008a61010c565b005b61008a61015f565b6100af737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d4610234565b60405190151581526020016100c3565b61008a61035f565b6000546100d49062010000900460ff1681565b6000546100d49060ff1681565b600a60405161011a9061067f565b908152602001604051809103906000f08015801561013c573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b60085460408051632a1f650b60e21b815290516000926001600160a01b03169163a87d942c9160048083019260209291908290030181865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd919061068c565b90506101da81600a610449565b60408051818152600e818301526d02a3432903b30b63ab29034b99d160951b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a150565b60008054610100900460ff16156102545750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561035a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916102e2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016106d5565b60408051601f19818403018152908290526102fc916106f9565b6000604051808303816000865af19150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5091505080806020019051810190610356919061070c565b9150505b919050565b600860009054906101000a90046001600160a01b03166001600160a01b0316635b34b9666040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050506000600860009054906101000a90046001600160a01b03166001600160a01b031663a87d942c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610440919061068c565b90506101da81600b5b80821461056f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104b99060208082526021908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e746040820152605d60f81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a161056f610573565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561066e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261060d92916020016106d5565b60408051601f1981840301815290829052610627916106f9565b6000604051808303816000865af19150503d8060008114610664576040519150601f19603f3d011682016040523d82523d6000602084013e610669565b606091505b505050505b6000805461ff001916610100179055565b61017f8061072f83390190565b60006020828403121561069e57600080fd5b5051919050565b6000815160005b818110156106c657602081850181015186830152016106ac565b50600093019283525090919050565b6001600160e01b03198316815260006106f160048301846106a5565b949350505050565b600061070582846106a5565b9392505050565b60006020828403121561071e57600080fd5b8151801515811461070557600080fdfe608060405234801561001057600080fd5b5060405161017f38038061017f83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b6101208061005f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80635b34b966146041578063a87d942c146049578063f5c5ad8314605e575b600080fd5b60476064565b005b60005460405190815260200160405180910390f35b6047607b565b60016000808282546074919060a1565b9091555050565b60016000808282546074919060c6565b634e487b7160e01b600052601160045260246000fd5b808201828112600083128015821682158216171560be5760be608b565b505092915050565b818103600083128015838313168383128216171560e35760e3608b565b509291505056fea26469706673582212203b1f4378e0f6dd47b2d5a7883d94cc1cd9593b8b7d14158ce56efcff2521caa864736f6c63430008110033a2646970667358221220e74c59f1d5a870e40ce366cef2b8077de90f10ba54ddc7c30151a98286e9616964736f6c63430008110033",
    "sourceMap": "124:501:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181:66;;;:::i;:::-;;253:160;;;:::i;321:38:0:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:9;;;171:51;;159:2;144:18;321:38:0;;;;;;;;1819:584:6;;;:::i;:::-;;;398:14:9;;391:22;373:41;;361:2;346:18;1819:584:6;233:187:9;419:204:8;;;:::i;170:28:0:-;;;;;;;;;;;;1572:26:6;;;;;;;;;181:66:8;237:2;225:15;;;;;:::i;:::-;579:25:9;;;567:2;552:18;225:15:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:7:8;:25;;-1:-1:-1;;;;;;215:25:8;-1:-1:-1;;;;;215:25:8;;;;;;;;;;181:66::o;253:160::-;306:7;;:18;;;-1:-1:-1;;;306:18:8;;;;294:9;;-1:-1:-1;;;;;306:7:8;;:16;;:18;;;;;;;;;;;;;;:7;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;294:30;;334:19;343:5;350:2;334:8;:19::i;:::-;368:38;;;1013:21:9;;;1070:2;1050:18;;;1043:30;-1:-1:-1;;;1104:2:9;1089:18;;1082:44;1193:4;1178:20;;1171:36;;;368:38:8;;;;;;;1158:3:9;368:38:8;;;284:129;253:160::o;1819:584:6:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:6;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1392:51:9;;;-1:-1:-1;;;1459:18:9;;;1452:34;2196:43:6;;;;;;;;;1365:18:9;;;2196:43:6;;;-1:-1:-1;;1671:64:6;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:6;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:6:o;419:204:8:-;468:7;;;;;;;;;-1:-1:-1;;;;;468:7:8;-1:-1:-1;;;;;468:24:8;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:9;516:7;;;;;;;;;-1:-1:-1;;;;;516:7:8;-1:-1:-1;;;;;516:16:8;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;504:30;;544:19;553:5;560:2;4759:257:6;4819:1;4814;:6;4810:200;;4841:40;;;;;2785:2:9;2767:21;;;2824:2;2804:18;;;2797:30;2863:34;2858:2;2843:18;;2836:62;-1:-1:-1;;;2929:2:9;2914:18;;2907:31;2970:3;2955:19;;2583:397;4841:40:6;;;;;;;;4900:30;;;3195:21:9;;;3252:2;3232:18;;;3225:30;-1:-1:-1;;;3286:2:9;3271:18;;3264:40;3371:4;3356:20;;3349:36;;;4900:30:6;;;;;;;3336:3:9;4900:30:6;;;4949;;;3606:21:9;;;3663:2;3643:18;;;3636:30;-1:-1:-1;;;3697:2:9;3682:18;;3675:40;3782:4;3767:20;;3760:36;;;4949:30:6;;;;;;;3747:3:9;4949:30:6;;;4993:6;:4;:6::i;:::-;4759:257;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;4009:51:9;;;-1:-1:-1;;;4076:18:9;;;4069:34;;;;2705:4:6;4119:18:9;;;4112:34;2482:11:6;;1671:64;2579:43;;3982:18:9;;2645:67:6;;;-1:-1:-1;;2645:67:6;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:6;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:6;2813:7;:14;;-1:-1:-1;;2813:14:6;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;615:183:9:-;684:6;737:2;725:9;716:7;712:23;708:32;705:52;;;753:1;750;743:12;705:52;-1:-1:-1;776:16:9;;615:183;-1:-1:-1;615:183:9:o;1497:322::-;1538:3;1576:5;1570:12;1600:1;1610:128;1624:6;1621:1;1618:13;1610:128;;;1721:4;1706:13;;;1702:24;;1696:31;1683:11;;;1676:52;1639:12;1610:128;;;-1:-1:-1;1793:1:9;1757:16;;1782:13;;;-1:-1:-1;1757:16:9;;1497:322;-1:-1:-1;1497:322:9:o;1824:278::-;-1:-1:-1;;;;;;2009:33:9;;1997:46;;1979:3;2059:37;2093:1;2084:11;;2076:6;2059:37;:::i;:::-;2052:44;1824:278;-1:-1:-1;;;;1824:278:9:o;2107:189::-;2236:3;2261:29;2286:3;2278:6;2261:29;:::i;:::-;2254:36;2107:189;-1:-1:-1;;;2107:189:9:o;2301:277::-;2368:6;2421:2;2409:9;2400:7;2396:23;2392:32;2389:52;;;2437:1;2434;2427:12;2389:52;2469:9;2463:16;2522:5;2515:13;2508:21;2501:5;2498:32;2488:60;;2544:1;2541;2534:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testGetCount()": "0c848668",
    "testIncrementCounter()": "d637f367",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIncrementCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Counter.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"src/Counter.sol\":{\"keccak256\":\"0x1cb5eaa99c0a387cd0fe5b48574daad9d372717115663f7ca298c09e03a01d06\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://abbb1585240c351e306973c7b427aaffc840b0f877c5d5666057c185a2bab4a8\",\"dweb:/ipfs/QmVuShHmhVn8prrGiDJvLqHJQFAaM8U12X7LLwh22Jpncw\"]},\"test/Counter.t.sol\":{\"keccak256\":\"0x3ec3265d2667cebf847bab09778697066780e3f32a9bee72e285fe148aa3284f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://58b2ee399eb6aff2812ed6aeadf8dcc5940d983897fb01e127ba8a3314501af1\",\"dweb:/ipfs/QmPrdjirw9UH3hzsz7R1xhxFVo9nLD1evVcgt9VWUEcsyr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetCount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIncrementCounter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Counter.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Counter.sol": {
        "keccak256": "0x1cb5eaa99c0a387cd0fe5b48574daad9d372717115663f7ca298c09e03a01d06",
        "urls": [
          "bzz-raw://abbb1585240c351e306973c7b427aaffc840b0f877c5d5666057c185a2bab4a8",
          "dweb:/ipfs/QmVuShHmhVn8prrGiDJvLqHJQFAaM8U12X7LLwh22Jpncw"
        ],
        "license": "UNLICENSED"
      },
      "test/Counter.t.sol": {
        "keccak256": "0x3ec3265d2667cebf847bab09778697066780e3f32a9bee72e285fe148aa3284f",
        "urls": [
          "bzz-raw://58b2ee399eb6aff2812ed6aeadf8dcc5940d983897fb01e127ba8a3314501af1",
          "dweb:/ipfs/QmPrdjirw9UH3hzsz7R1xhxFVo9nLD1evVcgt9VWUEcsyr"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Counter.t.sol",
    "id": 23333,
    "exportedSymbols": {
      "Counter": [
        23265
      ],
      "CounterTest": [
        23332
      ],
      "DSTest": [
        23226
      ],
      "Script": [
        262
      ],
      "StdStorage": [
        3290
      ],
      "Test": [
        3192
      ],
      "Vm": [
        5311
      ],
      "console": [
        13375
      ],
      "console2": [
        21439
      ],
      "stdError": [
        3262
      ],
      "stdJson": [
        622
      ],
      "stdMath": [
        4531
      ],
      "stdStorage": [
        4392
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:587:8",
    "nodes": [
      {
        "id": 23267,
        "nodeType": "PragmaDirective",
        "src": "39:24:8",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 23268,
        "nodeType": "ImportDirective",
        "src": "65:28:8",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23333,
        "sourceUnit": 4532,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23269,
        "nodeType": "ImportDirective",
        "src": "94:28:8",
        "absolutePath": "src/Counter.sol",
        "file": "../src/Counter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23333,
        "sourceUnit": 23266,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23332,
        "nodeType": "ContractDefinition",
        "src": "124:501:8",
        "nodes": [
          {
            "id": 23274,
            "nodeType": "VariableDeclaration",
            "src": "159:15:8",
            "constant": false,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "167:7:8",
            "scope": 23332,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Counter_$23265",
              "typeString": "contract Counter"
            },
            "typeName": {
              "id": 23273,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23272,
                "name": "Counter",
                "nameLocations": [
                  "159:7:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23265,
                "src": "159:7:8"
              },
              "referencedDeclaration": 23265,
              "src": "159:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$23265",
                "typeString": "contract Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 23286,
            "nodeType": "FunctionDefinition",
            "src": "181:66:8",
            "body": {
              "id": 23285,
              "nodeType": "Block",
              "src": "205:42:8",
              "statements": [
                {
                  "expression": {
                    "id": 23283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23277,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23274,
                      "src": "215:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$23265",
                        "typeString": "contract Counter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 23281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "237:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 23280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "225:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_int256_$returns$_t_contract$_Counter_$23265_$",
                          "typeString": "function (int256) returns (contract Counter)"
                        },
                        "typeName": {
                          "id": 23279,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23278,
                            "name": "Counter",
                            "nameLocations": [
                              "229:7:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23265,
                            "src": "229:7:8"
                          },
                          "referencedDeclaration": 23265,
                          "src": "229:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Counter_$23265",
                            "typeString": "contract Counter"
                          }
                        }
                      },
                      "id": 23282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "225:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$23265",
                        "typeString": "contract Counter"
                      }
                    },
                    "src": "215:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Counter_$23265",
                      "typeString": "contract Counter"
                    }
                  },
                  "id": 23284,
                  "nodeType": "ExpressionStatement",
                  "src": "215:25:8"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "190:5:8",
            "parameters": {
              "id": 23275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:2:8"
            },
            "returnParameters": {
              "id": 23276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "205:0:8"
            },
            "scope": 23332,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23306,
            "nodeType": "FunctionDefinition",
            "src": "253:160:8",
            "body": {
              "id": 23305,
              "nodeType": "Block",
              "src": "284:129:8",
              "statements": [
                {
                  "assignments": [
                    23290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23290,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "298:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 23305,
                      "src": "294:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 23289,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "294:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23294,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23291,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23274,
                        "src": "306:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$23265",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 23292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "314:8:8",
                      "memberName": "getCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23264,
                      "src": "306:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 23293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "294:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23296,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23290,
                        "src": "343:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 23297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "350:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 23295,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1380,
                        1405,
                        1418,
                        1434,
                        1476,
                        1518,
                        1560,
                        1597,
                        1634,
                        1671,
                        21760,
                        21785,
                        21815,
                        21840,
                        21899,
                        21924,
                        21954,
                        21979,
                        23079,
                        23114
                      ],
                      "referencedDeclaration": 21899,
                      "src": "334:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 23298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23299,
                  "nodeType": "ExpressionStatement",
                  "src": "334:19:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652076616c75652069733a20",
                        "id": 23301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "382:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        "value": "The value is: "
                      },
                      {
                        "id": 23302,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23290,
                        "src": "400:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 23300,
                      "name": "log_named_int",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21507,
                      "src": "368:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (string memory,int256)"
                      }
                    },
                    "id": 23303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23304,
                  "nodeType": "EmitStatement",
                  "src": "363:43:8"
                }
              ]
            },
            "functionSelector": "0c848668",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetCount",
            "nameLocation": "262:12:8",
            "parameters": {
              "id": 23287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:8"
            },
            "returnParameters": {
              "id": 23288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "284:0:8"
            },
            "scope": 23332,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23331,
            "nodeType": "FunctionDefinition",
            "src": "419:204:8",
            "body": {
              "id": 23330,
              "nodeType": "Block",
              "src": "458:165:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23309,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23274,
                        "src": "468:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$23265",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 23311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "476:16:8",
                      "memberName": "incrementCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23248,
                      "src": "468:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 23312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23313,
                  "nodeType": "ExpressionStatement",
                  "src": "468:26:8"
                },
                {
                  "assignments": [
                    23315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23315,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "508:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 23330,
                      "src": "504:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 23314,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "504:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23319,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23316,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23274,
                        "src": "516:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$23265",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 23317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "524:8:8",
                      "memberName": "getCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23264,
                      "src": "516:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 23318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "516:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "504:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23321,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23315,
                        "src": "553:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "3131",
                        "id": 23322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "560:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        }
                      ],
                      "id": 23320,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1380,
                        1405,
                        1418,
                        1434,
                        1476,
                        1518,
                        1560,
                        1597,
                        1634,
                        1671,
                        21760,
                        21785,
                        21815,
                        21840,
                        21899,
                        21924,
                        21954,
                        21979,
                        23079,
                        23114
                      ],
                      "referencedDeclaration": 21899,
                      "src": "544:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 23323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23324,
                  "nodeType": "ExpressionStatement",
                  "src": "544:19:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652076616c75652069733a20",
                        "id": 23326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "592:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        "value": "The value is: "
                      },
                      {
                        "id": 23327,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23315,
                        "src": "610:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 23325,
                      "name": "log_named_int",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21507,
                      "src": "578:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (string memory,int256)"
                      }
                    },
                    "id": 23328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23329,
                  "nodeType": "EmitStatement",
                  "src": "573:43:8"
                }
              ]
            },
            "functionSelector": "d637f367",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIncrementCounter",
            "nameLocation": "428:20:8",
            "parameters": {
              "id": 23307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:8"
            },
            "returnParameters": {
              "id": 23308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:8"
            },
            "scope": 23332,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23270,
              "name": "Test",
              "nameLocations": [
                "148:4:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3192,
              "src": "148:4:8"
            },
            "id": 23271,
            "nodeType": "InheritanceSpecifier",
            "src": "148:4:8"
          }
        ],
        "canonicalName": "CounterTest",
        "contractDependencies": [
          23265
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23332,
          3192,
          262,
          23226
        ],
        "name": "CounterTest",
        "nameLocation": "133:11:8",
        "scope": 23333,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 8
}